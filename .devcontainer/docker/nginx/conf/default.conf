server {
    listen 80;
    return 301 https://$host$request_uri$is_args$args;
}

server {
    # サーバー名
    server_name $hostname;
    # インデックスの指定
    index index.php index.hml;
    # ドキュメントルート
    root /var/www/html/src/public;
    charset utf-8;

    listen 443 ssl;
    # ssl証明書（crt or pem）
    ssl_certificate /etc/nginx/ssl/server.crt;
    # ssl秘密鍵
    ssl_certificate_key /etc/nginx/ssl/server.key;

    ssl_protocols TLSv1.2;

    # アップロード制限
    client_max_body_size 45M;

    # gzip圧縮設定
    gzip on;
    gzip_types *;

    # ブラウザからのアクセス処理
    # 左からドキュメントルート配下を参照
    # １）アクセスが来たパスの性的ファイルが存在するか
    # ２）アクセスが来たパスのディレクトリが存在するか（見つかったらその中のindexを参照する）
    # ３）上の2つがない場合、index.phのファイルとする
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    # 静的ファイル処理
    location ~* \.(ico|txt)$ {
        access_log off;
        log_not_found off;
    }
    # 動的ファイル処理
    location ~ \.php$ {
        # PATH_INFOで使用する正規表現
        # 1つめの(.+\.php)は$fastcgi_script_nameの値となる
        # 2つめの(/.+)は、$fastcgi_path_infoの値となる
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # TCP接続
        # コンテナ名とphp-fpm www.confのlistenに合わせた値
        fastcgi_pass php:9000;
        # UNIXソケット接続
        # fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
        # スラッシュで終わる URIの後ろに追加するファイル名を設定
        # $fastcgi_script_name変数の値になる
        fastcgi_index index.php;
        # 送信タイムアウト
        fastcgi_send_timeout 180;
        # 受信タイムアウト
        fastcgi_read_timeout 180;
        # バッファーオフ
        fastcgi_buffering off;
        # 設定ファイルを読み込む
        include fastcgi_params;
        # FastCGIに渡されるべきパラメータを設定
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
    }
}